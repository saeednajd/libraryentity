// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc;

#nullable disable

namespace mvc.Migrations
{
    [DbContext(typeof(Mycontext))]
    [Migration("20240419104021_Reza")]
    partial class Reza
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mvc.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("mvc.Models.BookShelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("bookShelves", (string)null);
                });

            modelBuilder.Entity("mvc.Models.BookShelfAndBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("BookShelfId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookID");

                    b.HasIndex("BookShelfId");

                    b.ToTable("BookShelfAndBooks", (string)null);
                });

            modelBuilder.Entity("mvc.Models.BookShelfAndShelves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookshelfId")
                        .HasColumnType("int");

                    b.Property<int>("ShelfId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookshelfId");

                    b.HasIndex("ShelfId");

                    b.ToTable("BookShelfAndShelves", (string)null);
                });

            modelBuilder.Entity("mvc.Models.BookShelfAndUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookShelfId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookShelfId");

                    b.HasIndex("UserId");

                    b.ToTable("BookShelfAndUsers");
                });

            modelBuilder.Entity("mvc.Models.Shelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shelves");
                });

            modelBuilder.Entity("mvc.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Joindate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("mvc.Models.BookShelfAndBook", b =>
                {
                    b.HasOne("mvc.Models.Book", "Books")
                        .WithMany("BookShelfAndBooks")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvc.Models.BookShelf", "BookShelves")
                        .WithMany("BookShelfAndBooks")
                        .HasForeignKey("BookShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookShelves");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("mvc.Models.BookShelfAndShelves", b =>
                {
                    b.HasOne("mvc.Models.BookShelf", "BookShelf")
                        .WithMany("BookShelfAndShelves")
                        .HasForeignKey("BookshelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvc.Models.Shelf", "Shelf")
                        .WithMany("BookShelfAndShelves")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookShelf");

                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("mvc.Models.BookShelfAndUser", b =>
                {
                    b.HasOne("mvc.Models.BookShelf", "BookShelf")
                        .WithMany("bookShelfAndUsers")
                        .HasForeignKey("BookShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvc.Models.User", "User")
                        .WithMany("bookShelfAndUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookShelf");

                    b.Navigation("User");
                });

            modelBuilder.Entity("mvc.Models.Book", b =>
                {
                    b.Navigation("BookShelfAndBooks");
                });

            modelBuilder.Entity("mvc.Models.BookShelf", b =>
                {
                    b.Navigation("BookShelfAndBooks");

                    b.Navigation("BookShelfAndShelves");

                    b.Navigation("bookShelfAndUsers");
                });

            modelBuilder.Entity("mvc.Models.Shelf", b =>
                {
                    b.Navigation("BookShelfAndShelves");
                });

            modelBuilder.Entity("mvc.Models.User", b =>
                {
                    b.Navigation("bookShelfAndUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
